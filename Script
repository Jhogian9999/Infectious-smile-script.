
local tableofconnections = {}
local infparts = {}
local disinfparts = {}
local sadparts = {}
local weaponsizes = {}
local ragdollparts = {}
local supportgetgenv = false
local disinf = true
local inf = true
local disablegp = false
local sad = true
local ragdoll = true
local antigrab = false
local tunnel = false
local getkeys = false
local instakillidnfect = false
local killgateswitcher = nil
local cooldown = nil
local loopclick = false
local loopclickpart = Instance.new("Part")
loopclickpart.Anchored = true
loopclickpart.CanCollide = false
loopclickpart.Color = Color3.fromRGB(0,255,0)
loopclickpart.Shape = Enum.PartType.Ball
loopclickpart.Size = Vector3.new(2,2,2)
loopclickpart.Transparency = 1
loopclickpart.Material = Enum.Material.SmoothPlastic
loopclickpart.Parent = workspace
local weaponsscale,weaponsscale2 = nil
local success,err = pcall(function()
    if typeof(getgenv()) == "table" then
        supportgetgenv = true
    end
end)

if workspace.Map:FindFirstChild("AntiHack") then
    workspace.Map.AntiHack:Destroy()
end

function correctpart(part)
    if not part:IsA("BasePart") then return nil end
    if ((part.Parent.Name == "Infector" or part.Parent.Name == "Infector 2.0" or part.Parent.Name == "Infector(You can reposition, reclone, or resize the camera or the white infection area") or (part.Color == Color3.fromRGB(248,248,248) and part.Material == Enum.Material.Neon)) and (part:FindFirstChild("InfectScript") or part:FindFirstChild("camera")) then
        return "inf"
    elseif (part.Color == Color3.fromRGB(213, 115, 61) or (part.Name == "Void" and part.Color == Color3.fromRGB(0,0,0)) or (part.Color == Color3.fromRGB(0,0,0) and part.Parent == workspace.Map.ConstantTerrain) or part.Name == "SmilerKillBrick" or part:FindFirstChild("KillAll") or part.Name == "SawKill" or ((part.Color == Color3.fromRGB(255,0,0) and part.Name ~= "Button" and (part.Parent.Name ~= "ButtonSystem" and part.Parent.Parent.Name ~= "SpotlightMap") and not part.Parent:FindFirstChild("Spotlights")) and part.Name == "Laser") or part.Parent:FindFirstChild("Human")) or (part.Name == "Lava" or part.Name == "SewageWater" or part.Name == "Water" or part.Name == "WaterBottom" or part.Name == "Weight" or part.Name:lower() == "killpart" or part.Name:lower() == "killbrick" or (part.Name == "Baseplate" and part.Color == Color3.fromRGB(17,17,17)) or part.Name == "KillRegion" or part.Name:lower() == "killall" or part.Name == "KillZone" or part.Name == "Spearhead" or part:FindFirstChild("FreezeScript") or (part.Parent.Name == "LaserGates") or (part.Name == "LavaBrick") or (part.Name == "Spike") or (part.Parent.Name == "Spinners" and (part.Color == Color3.fromRGB(255,255,0) or part.Color == Color3.fromRGB(255,89,89)))) then
        return "disinf"
    elseif (part:FindFirstChild("ConvertToHuman") and part:FindFirstChild("TouchInterest")) then
        return "sad"
    elseif part.Size == Vector3.new(10,10,10) and part.Shape == Enum.PartType.Ball and part:FindFirstChild("TouchInterest") then -- size is 10, shape is ball, parent is system
        print("found the ragdoll part.")
        return "ragdoll"
    else
        return nil
    end
end
function dopart(part,disinforinf,sadornot,ragdollornot)
    if part:IsA("Model") then
        for i,part in pairs(part:GetChildren()) do
            if part:IsA("Part") then
                part.CanTouch = false
                if disinforinf then
                    if not infparts[part] then
                        infparts[part] = true
                    end
                elseif disinforinf == false then
                    if not disinfparts[part] then
                        disinfparts[part] = true
                    end
                elseif sadornot then
                    if not sadparts[part] then
                        sadparts[part] = true
                    end
                elseif ragdollornot then
                    if not ragdollparts[part] then
                        ragdollparts[part] = true
                    end
                end
            end
        end
    else
        part.CanTouch = false
        if disinforinf then
            if not infparts[part] then
                infparts[part] = true
            end
        elseif not disinforinf then
            if not disinfparts[part] then
                disinfparts[part] = true
            end
        elseif sadornot then
            if not sadparts[part] then
                sadparts[part] = true
            end
        elseif ragdollornot then
            if not ragdollparts[part] then
                ragdollparts[part] = true
            end
        end

        table.insert(tableofconnections,part:GetPropertyChangedSignal("Color"):Connect(function()
            if correctpart(part) == "inf" then
                if disinfparts[part] then
                    disinfparts[part] = nil
                end
                if sadparts[part] then
                    sadparts[part] = nil
                end
                if ragdollparts[part] then
                    ragdollparts[part] = nil
                end
                infparts[part] = true
                part.CanTouch = inf
            elseif correctpart(part) == "disinf" then
                if infparts[part] then
                    infparts[part] = nil
                end
                if sadparts[part] then
                    sadparts[part] = nil
                end
                if ragdollparts[part] then
                    ragdollparts[part] = nil
                end
                disinfparts[part] = true
                part.CanTouch = disinf
            elseif correctpart(part) == "sad" then
                if infparts[part] then
                    infparts[part] = nil
                end
                if disinfparts[part] then
                    disinfparts[part] = nil
                end
                if ragdollparts[part] then
                    ragdollparts[part] = nil
                end
                sadparts[part] = true
                part.CanTouch = sad
            elseif correctpart(part) == "ragdoll" then
                if disinfparts[part] then
                    disinfparts[part] = nil
                end
                if sadparts[part] then
                    sadparts[part] = nil
                end
                if infparts[part] then
                    infparts[part] = nil
                end
                if ragdollparts[part] then
                    ragdollparts[part] = nil
                end
                ragdollparts[part] = true
                part.CanTouch = ragdoll
            end
        end))
    end
end

function dopart2(v)
    if not v.Parent then return end
    if v:IsA("Model") and v.Name == "Tunnels" and not tunnel then
        tunnel = true
        print("tunnel found")
        table.insert(tableofconnections,v.DescendantAdded:Connect(function(v)
            if (v.Name == "Car" or v.Name == "Van") and v:FindFirstChild("PP") and not disinf then
                v:Destroy()
            end
        end))
    elseif v.Parent.Name == "KillGateSwitcher" and v.Name == "Gate" and not killgateswitcher then
        killgateswitcher = v
        if not disinf then
            killgateswitcher.CanTouch = false
        end
    end
    local result = correctpart(v)
    if result == nil then return end
    if result == "inf" and not inf then
        dopart(v,true)
    elseif result == "disinf" and not disinf then
        dopart(v,false)
    elseif result == "sad" and not sad then
        dopart(v,nil,true)
    elseif result == "ragdoll" and not ragdoll then
        dopart(v,nil,nil,true)
    end
end

table.insert(tableofconnections,game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    if not ragdoll then
        char:WaitForChild("Ragdoll",math.huge)
        char.Ragdoll:WaitForChild("LocalRagdollScript",math.huge)
        char.Ragdoll.LocalRagdollScript.Enabled = false
    end
    char:WaitForChild("Humanoid",math.huge)
    local oldspeed = char.Humanoid.WalkSpeed
    table.insert(tableofconnections,char.Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if not ragdoll then
            if char.Humanoid.WalkSpeed <= 5 then
                char.Humanoid.WalkSpeed = oldspeed
            else
                oldspeed = char.Humanoid.WalkSpeed
            end
        end
    end))
    local oldjumppower = char.Humanoid.JumpPower
    table.insert(tableofconnections,char.Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        if not ragdoll then
            if char.Humanoid.JumpPower <= 20 then
                char.Humanoid.JumpPower = oldjumppower
            else
                oldjumppower = char.Humanoid.JumpPower
            end
        end
    end))
end))
local char = game.Players.LocalPlayer.Character
if not ragdoll then
    char:WaitForChild("Ragdoll",math.huge)
    char.Ragdoll:WaitForChild("LocalRagdollScript",math.huge)
    char.Ragdoll.LocalRagdollScript.Enabled = false
end
char:WaitForChild("Humanoid",math.huge)
local oldspeed = char.Humanoid.WalkSpeed
table.insert(tableofconnections,char.Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
    if not ragdoll then
        if char.Humanoid.WalkSpeed <= 5 then
            char.Humanoid.WalkSpeed = oldspeed
        else
            oldspeed = char.Humanoid.WalkSpeed
        end
    end
end))
local oldjumppower = char.Humanoid.JumpPower
table.insert(tableofconnections,char.Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
    if not ragdoll then
        if char.Humanoid.JumpPower < 50 then
            char.Humanoid.JumpPower = oldjumppower
        else
            oldjumppower = char.Humanoid.JumpPower
        end
    end
end))
table.insert(tableofconnections,workspace.Map.System.ChildAdded:Connect(function(v)
    table.insert(tableofconnections,v.DescendantAdded:Connect(function(v)
        if correctpart(v) == "inf" and not inf then
            dopart(v,true)
        elseif correctpart(v) == "disinf" and not disinf then
            dopart(v,false)
        elseif correctpart(v) == "sad" and not sad then
            dopart(v,nil,true)
        elseif correctpart(v) == "ragdoll" and not ragdoll then
            print("found ragdoll?")
            dopart(v,nil,nil,true)
        end
    end))
    for i=1,5 do
        wait(1) 
        for i,v in pairs(v:GetDescendants()) do
            if correctpart(v) == "inf" and not inf then
                dopart(v,true)
            elseif correctpart(v) == "disinf" and not disinf then
                dopart(v,false)
            elseif correctpart(v) == "sad" and not sad then
                dopart(v,nil,true)
            elseif correctpart(v) == "ragdoll" and not ragdoll then
                dopart(v,nil,nil,true)
            end
        end
    end
end))
table.insert(tableofconnections,workspace.Map.KillBricks.ChildAdded:Connect(function(v)
    v.Transparency = 0
end))

local gui = Instance.new("ScreenGui")
if supportgetgenv then
    pcall(function()
        if getgenv().infectioussmileguilol and getgenv().infectioussmileguidelete then
            getgenv().infectioussmileguidelete()
        end
        getgenv().infectioussmileguilol = gui
    end)
end
gui.Name = ""
for i=1,50 do
    gui.Name = gui.Name..tostring(math.random(1,9))
end
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui

local mainframe = Instance.new("Frame")
mainframe.BackgroundColor3 = Color3.fromRGB(50,50,50)
mainframe.BorderColor3 = Color3.fromRGB(255,255,255)
mainframe.Size = UDim2.new(.4,0,.6,0)
mainframe.Position = UDim2.new(.3,0,.2)
mainframe.Active = true
mainframe.Draggable = true
mainframe.Parent = gui
local constraint = Instance.new("UIAspectRatioConstraint")
constraint.AspectType = Enum.AspectType.ScaleWithParentSize
constraint.Parent = mainframe
constraint.AspectRatio = 1.5
local mainsection = Instance.new("Frame")
mainsection.BackgroundColor3 = Color3.fromRGB(50,50,50)
mainsection.BorderColor3 = Color3.fromRGB(255,255,255)
mainsection.Size = UDim2.new(.75,0,1,0)
mainsection.Position = UDim2.new(.25,0,0,0)
mainsection.Parent = mainframe
local extrasection = Instance.new("Frame")
extrasection.BackgroundColor3 = Color3.fromRGB(50,50,50)
extrasection.BorderColor3 = Color3.fromRGB(255,255,255)
extrasection.Size = UDim2.new(.75,0,1,0)
extrasection.Position = UDim2.new(.25,0,0,0)
extrasection.Parent = mainframe
extrasection.Visible = false
local keyloggersection = Instance.new("ScrollingFrame")
keyloggersection.BackgroundColor3 = Color3.fromRGB(50,50,50)
keyloggersection.BorderColor3 = Color3.fromRGB(255,255,255)
keyloggersection.Size = UDim2.new(.75,0,.85,0)
keyloggersection.Position = UDim2.new(.25,0,.15,0)
keyloggersection.CanvasSize = UDim2.new(0,0,8,0)
keyloggersection.Parent = mainframe
keyloggersection.Visible = false
local gridlayout = Instance.new("UIGridLayout")
gridlayout.CellPadding = UDim2.new(0,0,0.01,0)
gridlayout.CellSize = UDim2.new(.32,0,.025,0)
gridlayout.Parent = keyloggersection

local title = Instance.new("TextLabel")
title.Size = UDim2.new(.75,0,.1,0)
title.Position = UDim2.new(.25,0,0,0)
title.Text = "Infectious Smile"
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(255,255,255)
title.BackgroundColor3 = Color3.fromRGB(50,50,50)
title.BorderColor3 = Color3.fromRGB(255,255,255)
title.Parent = mainframe
local credits = Instance.new("TextLabel")
credits.Size = UDim2.new(.75,0,.05,0)
credits.Position = UDim2.new(.25,0,.1,0)
credits.Text = "By 2AreYouMental110"
credits.TextScaled = true
credits.TextColor3 = Color3.fromRGB(255,255,255)
credits.BackgroundColor3 = Color3.fromRGB(50,50,50)
credits.BorderColor3 = Color3.fromRGB(255,255,255)
credits.Parent = mainframe

local infhitbutton = Instance.new("TextButton")
infhitbutton.Size = UDim2.new(.2,0,.2,0)
infhitbutton.Position = UDim2.new(.1,0,.2,0)
infhitbutton.Text = "Infection Parts Work: ON"
infhitbutton.TextScaled = true
infhitbutton.TextColor3 = Color3.fromRGB(255,255,255)
infhitbutton.BackgroundColor3 = Color3.fromRGB(50,50,50)
infhitbutton.BorderColor3 = Color3.fromRGB(255,255,255)
infhitbutton.Parent = mainsection
table.insert(tableofconnections,infhitbutton.MouseButton1Click:Connect(function()
    inf = not inf
    if inf then
        infhitbutton.Text = "Infection Parts Work: ON"
        for v,i in pairs(infparts) do
            if v.Parent ~= nil then
                v.CanTouch = true
            end
        end
    else
        infhitbutton.Text = "Infection Parts Work: OFF"
        for i,v in pairs(workspace.Map.Infectors:GetChildren()) do
            dopart(v,true)
        end
        for i,v in pairs(workspace.Map:GetDescendants()) do
            dopart2(v)
        end
    end
end))
local disinfhitbutton = Instance.new("TextButton")
disinfhitbutton.Size = UDim2.new(.2,0,.2,0)
disinfhitbutton.Position = UDim2.new(.4,0,.2,0)
disinfhitbutton.Text = "Kill Parts Work: ON"
disinfhitbutton.TextScaled = true
disinfhitbutton.TextColor3 = Color3.fromRGB(255,255,255)
disinfhitbutton.BackgroundColor3 = Color3.fromRGB(50,50,50)
disinfhitbutton.BorderColor3 = Color3.fromRGB(255,255,255)
disinfhitbutton.Parent = mainsection
table.insert(tableofconnections,disinfhitbutton.MouseButton1Click:Connect(function()
    disinf = not disinf
    if killgateswitcher then
        killgateswitcher.CanTouch = disinf
    end
    if disinf then
        disinfhitbutton.Text = "Kill Parts Work: ON"
        for v,i in pairs(disinfparts) do
            if v.Parent ~= nil then
                v.CanTouch = true
            end
        end
    else
        disinfhitbutton.Text = "Kill Parts Work: OFF"
        for i,v in pairs(workspace.Map:GetDescendants()) do
            dopart2(v)
        end
    end
end))
local getcoinsbutton = Instance.new("TextButton")
getcoinsbutton.Size = UDim2.new(.2,0,.2,0)
getcoinsbutton.Position = UDim2.new(.7,0,.2,0)
getcoinsbutton.Text = "Get Coins"
getcoinsbutton.TextScaled = true
getcoinsbutton.TextColor3 = Color3.fromRGB(255,255,255)
getcoinsbutton.BackgroundColor3 = Color3.fromRGB(50,50,50)
getcoinsbutton.BorderColor3 = Color3.fromRGB(255,255,255)
getcoinsbutton.Parent = mainsection
table.insert(tableofconnections,getcoinsbutton.MouseButton1Click:Connect(function()
    local oldcframe = game.Players.LocalPlayer.Character:GetPivot()
    
